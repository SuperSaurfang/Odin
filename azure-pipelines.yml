# Starter pipeline


# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    echo '$(Build.BuildId)'
  displayName: 'Show build id number'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration Release'
    workingDirectory: 'Thor'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'Sif'

- task: CmdLine@2
  displayName: Prepare auth_config
  inputs:
    script: 'mv auth_config.blank.json auth_config.json'
    workingDirectory: 'Sif'

- task: FileTransform@1
  displayName: Set auth_config
  inputs:
    folderPath: '$(System.DefaultWorkingDirectory)/**/'
    fileType: 'json'
    targetFiles: '**/auth_config.json' 

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'Sif'
    customCommand: 'run build-minor'


- task: DockerCompose@0
  displayName: Create Docker Container
  inputs:
    containerregistrytype: 'Azure Container Registry'
    dockerComposeFile: '**/docker-compose.yaml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'build'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'Thor/bin/Release/'
    artifact: 'Thor'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'Sif/dist'
    artifact: 'Sif'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'Database'
    artifact: 'Database'
    publishLocation: 'pipeline'

