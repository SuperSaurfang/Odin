load_module "modules/ngx_http_perl_module.so";

env BACKEND;

events{}

http {   
    perl_set $BACKEND 'sub { return $ENV{"BACKEND"}; }';
    perl_set $DOMAIN 'local.dev';
    include /etc/nginx/mime.types;
    server {
        listen 80;
        listen [::]:80;

        server_name ${DOMAIN} www.${DOMAIN};
        server_tokens off;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {      
        listen 443 default_server ssl http2;
        listen [::]:443 ssl http2;

        server_name ${DOMAIN} www.${DOMAIN};
        
        ssl_certificate     /etc/nginx/cert/localhost.crt;
        ssl_certificate_key /etc/nginx/cert/localhost.key;

        #ssl_certificate /etc/nginx/ssl/live/example.org/fullchain.pem;
        #ssl_certificate_key /etc/nginx/ssl/live/example.org/privkey.pem;
        
        root /var/www/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            # remove hardcoded ip address from config
            proxy_pass         ${BACKEND};
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /files/ {
            proxy_pass         ${BACKEND};
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }

    
}